version: "3.8"

services:
  # Base de donn√©es PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: dragodinde-db
    environment:
      POSTGRES_DB: dragodinde_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - dragodinde-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Node.js/Express
  backend:
    build: ./backend
    container_name: dragodinde-backend
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=dragodinde_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dragodinde-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm run dev

  # Frontend React
  frontend:
    build: ./frontend
    container_name: dragodinde-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - dragodinde-network

volumes:
  postgres_data:

networks:
  dragodinde-network:
    driver: bridge
